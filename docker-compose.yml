version: '3'
networks:
  my_network:
    driver: bridge
services:
  postgres:
    image: postgres:16
    container_name: postgres
    restart: always # | unless-stopped
    ports:
      - "5434:5432"
    env_file:
      - ./postgres.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - my_network
#    environment:
#      POSTGRES_USER: myuser
#      POSTGRES_PASSWORD: mypassword
#      POSTGRES_DB: mydatabase

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - '5050:80'
    env_file:
      - ./pgadmin.env
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - my_network
#    environment:
#      PGADMIN_DEFAULT_EMAIL: dot@pg.com
#      PGADMIN_DEFAULT_PASSWORD: dot

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: always
    ports:
      - '5673:5672'
      - '15673:15672'
    env_file:
      - ./rabbit.env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - my_network
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9201:9200"
      - "9301:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - my_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    restart: always
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    volumes:
      - kibana_data:/usr/share/kibana/data
    networks:
      - my_network

volumes:
  pg_data:
  pgadmin_data:
  rabbitmq_data:
  es_data:
  kibana_data:

